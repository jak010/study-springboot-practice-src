# 🧠 README 자동 생성 프롬프트

아래의 지침에 따라 프로젝트 폴더 내 코드, 설정 파일, 라이브러리 의존성 등을 분석해 `README.md` 문서를 작성해주세요.

---

## 🎯 목적
이 프로젝트의 구조, 사용 기술, 주요 기능, 설정 방식 등을 분석하여 누구나 쉽게 이해할 수 있는 **README 문서**를 자동으로 생성하려 합니다.

---

## 📁 분석 대상
- 소스 코드 (예: `src/`, `app/`, `backend/`, `frontend/`)
- 설정 파일 (`application.yml`, `.env`, `settings.py`, `build.gradle`, `package.json`, `requirements.txt`, `Dockerfile`, `compose.yml` 등)
- 문서 관련 파일 (`README`, `.md`, `.txt`, `.rst` 등)

---

## 🧩 README에 포함할 항목

1. **프로젝트 개요 (Overview)**
   - 이 프로젝트가 어떤 목적을 가지고 있는지
   - 해결하고자 하는 문제 혹은 제공하는 기능

2. **기술 스택 (Tech Stack)**
   - 주요 언어, 프레임워크, 라이브러리, DB, 배포 환경 등
   - 예: Spring Boot + MySQL + Redis + Docker + AWS EC2

3. **폴더 구조 (Project Structure)**
   - 주요 디렉터리 및 파일 역할 요약
   - 예:
     ```
     src/
     ├── main/
     │   ├── java/           # 백엔드 소스 코드
     │   ├── resources/      # 설정 파일 및 정적 리소스
     └── test/               # 테스트 코드
     ```

4. **주요 기능 (Core Features)**
   - 주요 API 또는 서비스 설명
   - 각 기능의 역할 및 호출 흐름 요약
   - 예: 회원가입, 로그인, 결제, 관리자 대시보드 등

5. **환경 설정 (Configuration & Setup)**
   - 로컬 실행 방법 (`.env`, DB 설정, 의존성 설치 등)
   - 예:
     ```bash
     $ git clone <repo-url>
     $ cd project
     $ ./gradlew build
     $ docker-compose up
     ```

6. **의존성 목록 (Dependencies)**
   - 주요 외부 라이브러리와 그 역할
   - 예:
     - `log4jdbc-log4j2-jdbc4` – SQL 쿼리 로깅
     - `springdoc-openapi-starter-webmvc-ui` – Swagger UI

7. **빌드 및 배포 (Build & Deploy)**
   - 빌드 및 배포 자동화 도구 (예: GitHub Actions, Jenkins, Docker, Gradle)
   - 배포 절차 및 환경 설명

8. **테스트 (Testing)**
   - 단위 테스트 / 통합 테스트 구조
   - 테스트 실행 방법

9. **추가 참고 (Etc.)**
   - API 문서 링크, 관련 문서, 라이선스 정보 등

---

## 💬 프롬프트 예시

아래 예시처럼 사용할 수 있습니다 👇

> 🔹 **Prompt**
>
> ```
> 아래 경로의 프로젝트 파일들을 분석해서 README.md 문서를 작성해줘.
> 코드, 설정 파일, build.gradle, package.json, Dockerfile 등을 참고해 기술 스택과 주요 기능, 설정 정보를 정리해줘.
>
> 출력 형식은 Markdown이며, 다음 섹션을 포함해줘:
> - 프로젝트 개요
> - 기술 스택
> - 폴더 구조
> - 주요 기능
> - 환경 설정
> - 의존성 목록
> - 빌드 및 배포
> - 테스트
> - 추가 참고
>
> 분석 대상 경로:
> /path/to/project
> ```

---

## ✅ 사용 팁
- 전체 폴더를 업로드하기 전, `build.gradle`, `requirements.txt`, `package.json`, `Dockerfile`, 주요 소스코드 일부를 함께 첨부하면 분석 정확도가 높아집니다.
- “README 초안만” 요청한 뒤, “개발자 관점에서 개선해줘” 혹은 “비개발자도 이해하기 쉽게 바꿔줘” 등의 후속 프롬프트로 조정할 수 있습니다.

---

## 📌 출력 예시

```markdown
# Demo Project

## 📖 Overview
이 프로젝트는 회원 관리 및 거래 내역을 처리하는 RESTful API 서버입니다.

## ⚙️ Tech Stack
- Java 17, Spring Boot 3.3
- MySQL 8.0
- Redis
- Docker, Docker Compose
- Gradle, JUnit5

## 📁 Project Structure
...